# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# All non-required port mappings are disabled - you can uncomment these if needed

version: "2"
services:

#### Mandatory external services
  activemq:
    image: fogsyio/activemq:5.15.9
#    ports:
#      - "61616:61616"
#      - "61614:61614"
#      - "8161:8161"
#      - "1883:1883"
    networks:
      spnet:

  consul:
    image: fogsyio/consul:1.7.1
    environment:
      - "CONSUL_LOCAL_CONFIG={\"disable_update_check\": true}"
      - "CONSUL_BIND_INTERFACE=eth0"
      - "CONSUL_HTTP_ADDR=0.0.0.0"
    entrypoint:
      - consul
      - agent
      - -server
      - -bootstrap-expect=1
      - -data-dir=/consul/data
      - -node=consul-one
      - -bind={{ GetInterfaceIP "eth0" }}
      - -client=0.0.0.0
      - -enable-script-checks=true
      - -ui
    volumes:
      - consul:/consul/data
#    ports:
#      - "8500:8500"
#      - "8600:8600"
    networks:
      spnet:
        ipv4_address: 172.31.0.9

  couchdb:
    image: fogsyio/couchdb:2.3.1
#    ports:
#      - "5984:5984"
    volumes:
      - couchdb:/opt/couchdb/data
    networks:
      spnet:

  kafka:
    image: fogsyio/kafka:2.2.0
    hostname: kafka
#    ports:
#      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      # see: https://github.com/confluentinc/schema-registry/issues/648
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,OUTSIDE://kafka:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 5000012
      KAFKA_FETCH_MESSAGE_MAX_BYTES: 5000012
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
    volumes:
      - kafka:/kafka
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      spnet:

  zookeeper:
    image: fogsyio/zookeeper:3.4.13
#    ports:
#      - "2181:2181"
    volumes:
      - zk-conf:/opt/zookeeper-3.4.13/conf
      - zk-data:/opt/zookeeper-3.4.13/data
    networks:
      spnet:

#### StreamPipes services
  backend:
    image: "${SP_DOCKER_REGISTRY}/backend:${SP_VERSION}"
    depends_on:
      - consul
      - couchdb
#    ports:
#      - "8030:8030"
    volumes:
      - backend:/root/.streampipes
      - backend:/streampipes-assets
    networks:
      spnet:

  connect-master:
    image: "${SP_DOCKER_REGISTRY}/streampipes-connect-container:${SP_VERSION}"
    depends_on:
      - consul
      - couchdb
#    ports:
#      - "8099:8099"
    environment:
      - EXECUTION_MODE=MASTER
      - SP_CONNECT_CONTAINER_HOST=connect-master
      - SP_CONNECT_CONTAINER_WORKER=connect-worker
    volumes:
      - connect:/data/
    networks:
      spnet:

  connect-worker-main:
    image: "${SP_DOCKER_REGISTRY}/connect-worker:${SP_VERSION}"
    depends_on:
      - consul
      - couchdb
#    ports:
#      - "8098:8098"
    environment:
      - SP_CONNECT_CONTAINER_HOST=connect-master
      - SP_CONNECT_CONTAINER_WORKER=connect-worker-main
    volumes:
      - connect:/data/
    networks:
      spnet:

  nginx:
    image: "${SP_DOCKER_REGISTRY}/ui:${SP_VERSION}"
    ports:
      - "80:80"
    depends_on:
      - couchdb
      - activemq
      - consul
      - connect-master
      - backend
    networks:
      spnet:


#### Lite version pipeline elements
  processors-filters-jvm:
    image: "${SP_DOCKER_REGISTRY}/processors-filters-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-filters-siddhi:
    image: "${SP_DOCKER_REGISTRY}/processors-filters-siddhi:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-image-processing-jvm:
    image: "${SP_DOCKER_REGISTRY}/processors-image-processing-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-transformation-jvm:
    image: "${SP_DOCKER_REGISTRY}/processors-transformation-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sinks-brokers-jvm:
    image: "${SP_DOCKER_REGISTRY}/sinks-brokers-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sinks-databases-jvm:
    image: "${SP_DOCKER_REGISTRY}/sinks-databases-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sinks-internal-jvm:
    image: "${SP_DOCKER_REGISTRY}/sinks-internal-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sinks-notifications-jvm:
    image: "${SP_DOCKER_REGISTRY}/sinks-notifications-jvm:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sources-watertank-simulator:
    image: "${SP_DOCKER_REGISTRY}/sources-watertank-simulator:${SP_VERSION}"
    depends_on:
      - "consul"
      - "kafka"
    networks:
      spnet:

#### Full version pipeline elements

  processors-aggregation-flink:
    image: "${SP_DOCKER_REGISTRY}/processors-aggregation-flink:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-enricher-flink:
    image: "${SP_DOCKER_REGISTRY}/processors-enricher-flink:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-pattern-detection-flink:
    image: "${SP_DOCKER_REGISTRY}/processors-pattern-detection-flink:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-statistics-flink:
    image: "${SP_DOCKER_REGISTRY}/processors-statistics-flink:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  processors-transformation-flink:
    image: "${SP_DOCKER_REGISTRY}/processors-transformation-flink:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sinks-databases-flink:
    image: "${SP_DOCKER_REGISTRY}/sinks-databases-flink:${SP_VERSION}"
    depends_on:
      - "consul"
    networks:
      spnet:

  sources-vehicle-simulator:
    image: "${SP_DOCKER_REGISTRY}/sources-vehicle-simulator:${SP_VERSION}"
    depends_on:
      - "consul"
      - "kafka"
    networks:
      spnet:


#### Full version service extensions

  jobmanager:
    image: flink:1.9.1-scala_2.11
    ports:
      - "8081:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      spnet:

  taskmanager:
    image: flink:1.9.1-scala_2.11
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "jobmanager:jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=20
    networks:
      spnet:

  influxdb:
    image: fogsyio/influxdb:1.7
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    environment:
      - INFLUXDB_DATA_ENGINE=tsm1
      - INFLUXDB_REPORTING_DISABLED=false
      - INFLUXDB_ADMIN_ENABLED=true
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - influx:/var/lib/influxdb
    networks:
      spnet:


volumes:
  backend:
  consul:
  connect:
  couchdb:
  influx:
  kafka:
  zk-conf:
  zk-data:


networks:
  spnet:
    driver: bridge
    ipam:
     config:
       - subnet: 172.31.0.0/16
         gateway: 172.31.0.1
